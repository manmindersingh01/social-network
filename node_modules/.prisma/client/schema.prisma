// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  name          String
  email         String   @unique
  posts         Post[]
  friends       Friend[] @relation("UserFriends")
  friendOf      Friend[] @relation("FriendOfUser")
  sentChats     Chat[]   @relation("SentChats")
  receivedChats Chat[]   @relation("ReceivedChats")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Friend {
  id        Int      @id @default(autoincrement())
  userId    Int
  friendId  Int
  user      User     @relation("UserFriends", fields: [userId], references: [id])
  friend    User     @relation("FriendOfUser", fields: [friendId], references: [id])
  createdAt DateTime @default(now())
}

model Chat {
  id         Int      @id @default(autoincrement())
  senderId   Int
  receiverId Int
  message    String
  sender     User     @relation("SentChats", fields: [senderId], references: [id])
  receiver   User     @relation("ReceivedChats", fields: [receiverId], references: [id])
  createdAt  DateTime @default(now())
}
